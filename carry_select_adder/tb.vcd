$date
	Sun Oct 03 22:50:33 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module csa_tb $end
$var wire 1 ! overflow $end
$var wire 16 " Y [15:0] $end
$var reg 16 # A [15:0] $end
$var reg 16 $ B [15:0] $end
$var reg 1 % mod $end
$scope module tb0 $end
$var wire 16 & A [15:0] $end
$var wire 16 ' B [15:0] $end
$var wire 1 % mod $end
$var wire 1 ! overflow $end
$var wire 16 ( carryzero [15:0] $end
$var wire 16 ) carryone [15:0] $end
$var wire 1 * c3_1 $end
$var wire 1 + c3_0 $end
$var wire 1 , c2_1 $end
$var wire 1 - c2_0 $end
$var wire 1 . c2 $end
$var wire 1 / c1_1 $end
$var wire 1 0 c1_0 $end
$var wire 1 1 c1 $end
$var wire 1 2 c0_1 $end
$var wire 1 3 c0_0 $end
$var wire 1 4 c0 $end
$var wire 16 5 Y [15:0] $end
$var wire 4 6 X3 [3:0] $end
$var wire 4 7 X2 [3:0] $end
$var wire 4 8 X1 [3:0] $end
$var wire 4 9 X0 [3:0] $end
$var wire 16 : X [15:0] $end
$var wire 4 ; A3 [3:0] $end
$var wire 4 < A2 [3:0] $end
$var wire 4 = A1 [3:0] $end
$var wire 4 > A0 [3:0] $end
$scope module m0 $end
$var wire 4 ? in0 [3:0] $end
$var wire 4 @ in1 [3:0] $end
$var wire 1 % sel $end
$var wire 4 A result [3:0] $end
$var wire 1 4 carryout $end
$var wire 1 2 carry1 $end
$var wire 1 3 carry0 $end
$upscope $end
$scope module m1 $end
$var wire 4 B in0 [3:0] $end
$var wire 4 C in1 [3:0] $end
$var wire 1 4 sel $end
$var wire 4 D result [3:0] $end
$var wire 1 1 carryout $end
$var wire 1 / carry1 $end
$var wire 1 0 carry0 $end
$upscope $end
$scope module m2 $end
$var wire 4 E in0 [3:0] $end
$var wire 4 F in1 [3:0] $end
$var wire 1 1 sel $end
$var wire 4 G result [3:0] $end
$var wire 1 . carryout $end
$var wire 1 , carry1 $end
$var wire 1 - carry0 $end
$upscope $end
$scope module m3 $end
$var wire 4 H in0 [3:0] $end
$var wire 4 I in1 [3:0] $end
$var wire 1 . sel $end
$var wire 4 J result [3:0] $end
$var wire 1 ! carryout $end
$var wire 1 * carry1 $end
$var wire 1 + carry0 $end
$upscope $end
$scope module one_0 $end
$var wire 4 K a [3:0] $end
$var wire 4 L b [3:0] $end
$var wire 1 M cin $end
$var wire 4 N y [3:0] $end
$var wire 1 O cout2 $end
$var wire 1 P cout1 $end
$var wire 1 Q cout0 $end
$var wire 1 2 cout $end
$scope module u0 $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 M cin $end
$var wire 1 T y $end
$var wire 1 Q cout $end
$upscope $end
$scope module u1 $end
$var wire 1 U a $end
$var wire 1 V b $end
$var wire 1 Q cin $end
$var wire 1 W y $end
$var wire 1 P cout $end
$upscope $end
$scope module u2 $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 P cin $end
$var wire 1 Z y $end
$var wire 1 O cout $end
$upscope $end
$scope module u3 $end
$var wire 1 [ a $end
$var wire 1 \ b $end
$var wire 1 O cin $end
$var wire 1 ] y $end
$var wire 1 2 cout $end
$upscope $end
$upscope $end
$scope module one_1 $end
$var wire 4 ^ a [3:0] $end
$var wire 4 _ b [3:0] $end
$var wire 1 ` cin $end
$var wire 4 a y [3:0] $end
$var wire 1 b cout2 $end
$var wire 1 c cout1 $end
$var wire 1 d cout0 $end
$var wire 1 / cout $end
$scope module u0 $end
$var wire 1 e a $end
$var wire 1 f b $end
$var wire 1 ` cin $end
$var wire 1 g y $end
$var wire 1 d cout $end
$upscope $end
$scope module u1 $end
$var wire 1 h a $end
$var wire 1 i b $end
$var wire 1 d cin $end
$var wire 1 j y $end
$var wire 1 c cout $end
$upscope $end
$scope module u2 $end
$var wire 1 k a $end
$var wire 1 l b $end
$var wire 1 c cin $end
$var wire 1 m y $end
$var wire 1 b cout $end
$upscope $end
$scope module u3 $end
$var wire 1 n a $end
$var wire 1 o b $end
$var wire 1 b cin $end
$var wire 1 p y $end
$var wire 1 / cout $end
$upscope $end
$upscope $end
$scope module one_2 $end
$var wire 4 q a [3:0] $end
$var wire 4 r b [3:0] $end
$var wire 1 s cin $end
$var wire 4 t y [3:0] $end
$var wire 1 u cout2 $end
$var wire 1 v cout1 $end
$var wire 1 w cout0 $end
$var wire 1 , cout $end
$scope module u0 $end
$var wire 1 x a $end
$var wire 1 y b $end
$var wire 1 s cin $end
$var wire 1 z y $end
$var wire 1 w cout $end
$upscope $end
$scope module u1 $end
$var wire 1 { a $end
$var wire 1 | b $end
$var wire 1 w cin $end
$var wire 1 } y $end
$var wire 1 v cout $end
$upscope $end
$scope module u2 $end
$var wire 1 ~ a $end
$var wire 1 !" b $end
$var wire 1 v cin $end
$var wire 1 "" y $end
$var wire 1 u cout $end
$upscope $end
$scope module u3 $end
$var wire 1 #" a $end
$var wire 1 $" b $end
$var wire 1 u cin $end
$var wire 1 %" y $end
$var wire 1 , cout $end
$upscope $end
$upscope $end
$scope module one_3 $end
$var wire 4 &" a [3:0] $end
$var wire 4 '" b [3:0] $end
$var wire 1 (" cin $end
$var wire 4 )" y [3:0] $end
$var wire 1 *" cout2 $end
$var wire 1 +" cout1 $end
$var wire 1 ," cout0 $end
$var wire 1 * cout $end
$scope module u0 $end
$var wire 1 -" a $end
$var wire 1 ." b $end
$var wire 1 (" cin $end
$var wire 1 /" y $end
$var wire 1 ," cout $end
$upscope $end
$scope module u1 $end
$var wire 1 0" a $end
$var wire 1 1" b $end
$var wire 1 ," cin $end
$var wire 1 2" y $end
$var wire 1 +" cout $end
$upscope $end
$scope module u2 $end
$var wire 1 3" a $end
$var wire 1 4" b $end
$var wire 1 +" cin $end
$var wire 1 5" y $end
$var wire 1 *" cout $end
$upscope $end
$scope module u3 $end
$var wire 1 6" a $end
$var wire 1 7" b $end
$var wire 1 *" cin $end
$var wire 1 8" y $end
$var wire 1 * cout $end
$upscope $end
$upscope $end
$scope module s0 $end
$var wire 16 9" in0 [15:0] $end
$var wire 16 :" in1 [15:0] $end
$var wire 1 % mod $end
$var wire 16 ;" out [15:0] $end
$upscope $end
$scope module zero_0 $end
$var wire 4 <" a [3:0] $end
$var wire 4 =" b [3:0] $end
$var wire 1 >" cin $end
$var wire 4 ?" y [3:0] $end
$var wire 1 @" cout2 $end
$var wire 1 A" cout1 $end
$var wire 1 B" cout0 $end
$var wire 1 3 cout $end
$scope module u0 $end
$var wire 1 C" a $end
$var wire 1 D" b $end
$var wire 1 >" cin $end
$var wire 1 E" y $end
$var wire 1 B" cout $end
$upscope $end
$scope module u1 $end
$var wire 1 F" a $end
$var wire 1 G" b $end
$var wire 1 B" cin $end
$var wire 1 H" y $end
$var wire 1 A" cout $end
$upscope $end
$scope module u2 $end
$var wire 1 I" a $end
$var wire 1 J" b $end
$var wire 1 A" cin $end
$var wire 1 K" y $end
$var wire 1 @" cout $end
$upscope $end
$scope module u3 $end
$var wire 1 L" a $end
$var wire 1 M" b $end
$var wire 1 @" cin $end
$var wire 1 N" y $end
$var wire 1 3 cout $end
$upscope $end
$upscope $end
$scope module zero_1 $end
$var wire 4 O" a [3:0] $end
$var wire 4 P" b [3:0] $end
$var wire 1 Q" cin $end
$var wire 4 R" y [3:0] $end
$var wire 1 S" cout2 $end
$var wire 1 T" cout1 $end
$var wire 1 U" cout0 $end
$var wire 1 0 cout $end
$scope module u0 $end
$var wire 1 V" a $end
$var wire 1 W" b $end
$var wire 1 Q" cin $end
$var wire 1 X" y $end
$var wire 1 U" cout $end
$upscope $end
$scope module u1 $end
$var wire 1 Y" a $end
$var wire 1 Z" b $end
$var wire 1 U" cin $end
$var wire 1 [" y $end
$var wire 1 T" cout $end
$upscope $end
$scope module u2 $end
$var wire 1 \" a $end
$var wire 1 ]" b $end
$var wire 1 T" cin $end
$var wire 1 ^" y $end
$var wire 1 S" cout $end
$upscope $end
$scope module u3 $end
$var wire 1 _" a $end
$var wire 1 `" b $end
$var wire 1 S" cin $end
$var wire 1 a" y $end
$var wire 1 0 cout $end
$upscope $end
$upscope $end
$scope module zero_2 $end
$var wire 4 b" a [3:0] $end
$var wire 4 c" b [3:0] $end
$var wire 1 d" cin $end
$var wire 4 e" y [3:0] $end
$var wire 1 f" cout2 $end
$var wire 1 g" cout1 $end
$var wire 1 h" cout0 $end
$var wire 1 - cout $end
$scope module u0 $end
$var wire 1 i" a $end
$var wire 1 j" b $end
$var wire 1 d" cin $end
$var wire 1 k" y $end
$var wire 1 h" cout $end
$upscope $end
$scope module u1 $end
$var wire 1 l" a $end
$var wire 1 m" b $end
$var wire 1 h" cin $end
$var wire 1 n" y $end
$var wire 1 g" cout $end
$upscope $end
$scope module u2 $end
$var wire 1 o" a $end
$var wire 1 p" b $end
$var wire 1 g" cin $end
$var wire 1 q" y $end
$var wire 1 f" cout $end
$upscope $end
$scope module u3 $end
$var wire 1 r" a $end
$var wire 1 s" b $end
$var wire 1 f" cin $end
$var wire 1 t" y $end
$var wire 1 - cout $end
$upscope $end
$upscope $end
$scope module zero_3 $end
$var wire 4 u" a [3:0] $end
$var wire 4 v" b [3:0] $end
$var wire 1 w" cin $end
$var wire 4 x" y [3:0] $end
$var wire 1 y" cout2 $end
$var wire 1 z" cout1 $end
$var wire 1 {" cout0 $end
$var wire 1 + cout $end
$scope module u0 $end
$var wire 1 |" a $end
$var wire 1 }" b $end
$var wire 1 w" cin $end
$var wire 1 ~" y $end
$var wire 1 {" cout $end
$upscope $end
$scope module u1 $end
$var wire 1 !# a $end
$var wire 1 "# b $end
$var wire 1 {" cin $end
$var wire 1 ## y $end
$var wire 1 z" cout $end
$upscope $end
$scope module u2 $end
$var wire 1 $# a $end
$var wire 1 %# b $end
$var wire 1 z" cin $end
$var wire 1 &# y $end
$var wire 1 y" cout $end
$upscope $end
$scope module u3 $end
$var wire 1 '# a $end
$var wire 1 (# b $end
$var wire 1 y" cin $end
$var wire 1 )# y $end
$var wire 1 + cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
b0 x"
0w"
b0 v"
b0 u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
b0 e"
0d"
b0 c"
b0 b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
b0 R"
0Q"
b0 P"
b0 O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
b0 ?"
0>"
b0 ="
b0 <"
b0 ;"
b1111111111111111 :"
b0 9"
08"
07"
06"
05"
04"
03"
02"
01"
00"
1/"
0."
0-"
0,"
0+"
0*"
b1 )"
1("
b0 '"
b0 &"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
1z
0y
0x
0w
0v
0u
b1 t
1s
b0 r
b0 q
0p
0o
0n
0m
0l
0k
0j
0i
0h
1g
0f
0e
0d
0c
0b
b1 a
1`
b0 _
b0 ^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
1T
0S
0R
0Q
0P
0O
b1 N
1M
b0 L
b0 K
b0 J
b1 I
b0 H
b0 G
b1 F
b0 E
b0 D
b1 C
b0 B
b0 A
b1 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
04
03
02
01
00
0/
0.
0-
0,
0+
0*
b1000100010001 )
b0 (
b0 '
b0 &
0%
b0 $
b0 #
b0 "
0!
$end
#50
1!
14
1*
1+
1c
1p
1b
1U"
1T"
1a"
1S"
12
13
b0 A
1d
b1111 D
b11110000 "
b11110000 5
b0 J
17"
1(#
1f
1i
1l
1W"
1Z"
1]"
1\
1M"
b1 @
b0 ?
b1111 C
b1110 B
b1 I
b0 H
b1000 6
b1000 '"
b1000 v"
b111 8
b111 _
b111 P"
b1000 9
b1000 L
b1000 ="
b1 N
0]
1[
b0 ?"
0N"
1L"
1g
1e
1j
1h
b1111 a
1m
1k
0X"
1V"
1["
1Y"
b1110 R"
1^"
1\"
b1000111110001 )
b1 )"
08"
16"
b11100000 (
b0 x"
0)#
1'#
b111111110000111 :"
b1000000001111000 :
b1000000001111000 ;"
b1000 >
b1000 K
b1000 <"
b111 =
b111 ^
b111 O"
b1000 ;
b1000 &"
b1000 u"
b1000000001111000 $
b1000000001111000 '
b1000000001111000 9"
b1000000001111000 #
b1000000001111000 &
#100
11
1.
1+"
18"
1*"
1{"
1z"
1)#
1y"
1v
1u
1,
1h"
1g"
1f"
1-
1P
1]
1O
1B"
1A"
1N"
1@"
1Q
b1110 A
1/
b1111 D
10
1w
b1111 G
1,"
b1111111111111110 "
b1111111111111110 5
b1111 J
1."
11"
14"
1}"
1"#
1%#
1y
1|
1!"
1$"
1j"
1m"
1p"
1s"
1o
1`"
1S
1V
1Y
1D"
1G"
1J"
b1111 @
b1110 ?
b1111 C
b1110 B
b1111 F
b1110 E
b1111 I
b1110 H
b1111 6
b1111 '"
b1111 v"
b1111 7
b1111 r
b1111 c"
b1111 8
b1111 _
b1111 P"
b1111 9
b1111 L
b1111 ="
1T
1R
1W
1U
b1111 N
1Z
1X
0E"
1C"
1H"
1F"
b1110 ?"
1K"
1I"
b1111 a
1p
1n
b1110 R"
1a"
1_"
1z
1x
1}
1{
1""
1~
b1111 t
1%"
1#"
0k"
1i"
1n"
1l"
1q"
1o"
b1110 e"
1t"
1r"
1/"
1-"
12"
10"
b1111111111111111 )
b1111 )"
15"
13"
0~"
1|"
1##
1!#
b1110111011101110 (
b1110 x"
1&#
1$#
b0 :"
b1111111111111111 :
b1111111111111111 ;"
b1111 >
b1111 K
b1111 <"
b1111 =
b1111 ^
b1111 O"
b1111 <
b1111 q
b1111 b"
b1111 ;
b1111 &"
b1111 u"
b1111111111111111 $
b1111111111111111 '
b1111111111111111 9"
b1111111111111111 #
b1111111111111111 &
#150
b0 J
b0 G
b0 D
1!
1.
11
14
1,"
1+"
1*"
1*
b0 I
0{"
0z"
0y"
0+
b1111 H
1w
1v
1u
1,
b0 F
0h"
0g"
0f"
0-
b1111 E
1d
1c
1b
1/
b0 C
0U"
0T"
0S"
00
b1111 B
1Q
1P
1O
12
b0 @
0B"
0A"
0@"
03
b1111 ?
0/"
0."
02"
01"
05"
04"
b0 )"
08"
07"
1~"
0}"
1##
0"#
1&#
0%#
b1111 x"
1)#
0(#
0z
0y
0}
0|
0""
0!"
b0 t
0%"
0$"
1k"
0j"
1n"
0m"
1q"
0p"
b1111 e"
1t"
0s"
0g
0f
0j
0i
0m
0l
b0 a
0p
0o
1X"
0W"
1["
0Z"
1^"
0]"
b1111 R"
1a"
0`"
0T
0S
0W
0V
0Z
0Y
b0 )
b0 N
0]
0\
1E"
0D"
1H"
0G"
1K"
0J"
b1111111111111111 (
b1111 ?"
1N"
0M"
b0 6
b0 '"
b0 v"
b0 7
b0 r
b0 c"
b0 8
b0 _
b0 P"
b0 9
b0 L
b0 ="
b0 "
b0 5
b0 A
b0 :
b0 ;"
1%
#160
